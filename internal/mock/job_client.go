// Code generated by mockery. DO NOT EDIT.

package mock

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	river "github.com/riverqueue/river"
)

// MockJobClient is an autogenerated mock type for the Client type
type MockJobClient struct {
	mock.Mock
}

type MockJobClient_Expecter struct {
	mock *mock.Mock
}

func (_m *MockJobClient) EXPECT() *MockJobClient_Expecter {
	return &MockJobClient_Expecter{mock: &_m.Mock}
}

// InsertJob provides a mock function with given fields: ctx, flavorVersionID, status, _a3
func (_m *MockJobClient) InsertJob(ctx context.Context, flavorVersionID string, status string, _a3 river.JobArgs) error {
	ret := _m.Called(ctx, flavorVersionID, status, _a3)

	if len(ret) == 0 {
		panic("no return value specified for InsertJob")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string, river.JobArgs) error); ok {
		r0 = rf(ctx, flavorVersionID, status, _a3)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockJobClient_InsertJob_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'InsertJob'
type MockJobClient_InsertJob_Call struct {
	*mock.Call
}

// InsertJob is a helper method to define mock.On call
//   - ctx context.Context
//   - flavorVersionID string
//   - status string
//   - _a3 river.JobArgs
func (_e *MockJobClient_Expecter) InsertJob(ctx interface{}, flavorVersionID interface{}, status interface{}, _a3 interface{}) *MockJobClient_InsertJob_Call {
	return &MockJobClient_InsertJob_Call{Call: _e.mock.On("InsertJob", ctx, flavorVersionID, status, _a3)}
}

func (_c *MockJobClient_InsertJob_Call) Run(run func(ctx context.Context, flavorVersionID string, status string, _a3 river.JobArgs)) *MockJobClient_InsertJob_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string), args[3].(river.JobArgs))
	})
	return _c
}

func (_c *MockJobClient_InsertJob_Call) Return(_a0 error) *MockJobClient_InsertJob_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockJobClient_InsertJob_Call) RunAndReturn(run func(context.Context, string, string, river.JobArgs) error) *MockJobClient_InsertJob_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockJobClient creates a new instance of MockJobClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockJobClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockJobClient {
	mock := &MockJobClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
