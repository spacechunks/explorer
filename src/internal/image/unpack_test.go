package image

import (
	"bytes"
	"github.com/chunks76k/internal/image/testdata"
	"github.com/google/go-containerregistry/pkg/v1/tarball"
	"github.com/stretchr/testify/assert"
	"io"
	"testing"
)

// use simple test, because different layer configurations are
// generated by docker build. see testdata/Dockerfile
func TestUnpackDir(t *testing.T) {
	testImgOpener := func() (io.ReadCloser, error) {
		return io.NopCloser(bytes.NewReader(testdata.Image)), nil
	}
	img, err := tarball.Image(testImgOpener, nil)
	if err != nil {
		t.Fatalf("read img: %v", err)
	}
	expected := []File{
		{
			AbsPath: "/a/",
			RelPath: "/",
			Dir:     true,
		},
		{
			AbsPath: "/a/b/",
			RelPath: "/b/",
			Dir:     true,
		},
		{
			AbsPath: "/a/b/file2",
			RelPath: "/b/file2",
			Content: []byte{102, 105, 108, 101, 50, 10, 99, 104, 97, 110, 103, 101, 100, 10},
			Size:    14,
		},
		{
			AbsPath: "/a/b/c/",
			RelPath: "/b/c/",
			Dir:     true,
		},
		{
			AbsPath: "/a/b/c/file3",
			RelPath: "/b/c/file3",
			Content: []byte{102, 105, 108, 101, 51, 10},
			Size:    6,
		},
	}
	files, err := UnpackDir(img, "/a")
	if err != nil {
		t.Fatalf("unpack: %v", err)
	}
	assert.ElementsMatch(t, expected, files)
}
