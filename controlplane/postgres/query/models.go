// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0

package query

import (
	"database/sql/driver"
	"fmt"
	"net/netip"
	"time"

	"github.com/jackc/pgx/v5/pgtype"
)

type InstanceState string

const (
	InstanceStatePENDING        InstanceState = "PENDING"
	InstanceStateCREATING       InstanceState = "CREATING"
	InstanceStateRUNNING        InstanceState = "RUNNING"
	InstanceStateDELETING       InstanceState = "DELETING"
	InstanceStateDELETED        InstanceState = "DELETED"
	InstanceStateCREATIONFAILED InstanceState = "CREATION_FAILED"
)

func (e *InstanceState) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = InstanceState(s)
	case string:
		*e = InstanceState(s)
	default:
		return fmt.Errorf("unsupported scan type for InstanceState: %T", src)
	}
	return nil
}

type NullInstanceState struct {
	InstanceState InstanceState
	Valid         bool // Valid is true if InstanceState is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullInstanceState) Scan(value interface{}) error {
	if value == nil {
		ns.InstanceState, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.InstanceState.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullInstanceState) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.InstanceState), nil
}

type Blob struct {
	Hash      string
	Data      []byte
	CreatedAt time.Time
}

type Chunk struct {
	ID          string
	Name        string
	Description string
	Tags        []string
	CreatedAt   time.Time
	UpdatedAt   time.Time
}

type Flavor struct {
	ID        string
	ChunkID   string
	Name      string
	CreatedAt time.Time
	UpdatedAt time.Time
}

type FlavorVersion struct {
	ID            string
	FlavorID      string
	Hash          string
	ChangeHash    string
	Version       string
	FilesUploaded bool
	PrevVersionID *string
	CreatedAt     time.Time
}

type FlavorVersionFile struct {
	FlavorVersionID string
	FileHash        pgtype.Text
	FilePath        string
	CreatedAt       time.Time
}

type Instance struct {
	ID        string
	ChunkID   string
	FlavorID  string
	NodeID    string
	Port      *int32
	State     InstanceState
	CreatedAt time.Time
	UpdatedAt time.Time
}

type Node struct {
	ID        string
	Address   netip.Addr
	CreatedAt time.Time
}

type SchemaMigration struct {
	Version string
}
